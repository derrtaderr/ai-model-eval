version: '3.8'

services:
  # PostgreSQL Database
  postgres:
    image: postgres:15
    container_name: llm_eval_postgres
    environment:
      POSTGRES_USER: user
      POSTGRES_PASSWORD: password
      POSTGRES_DB: llm_eval_platform
    ports:
      - "5432:5432"
    volumes:
      - postgres_data:/var/lib/postgresql/data
      - ./database/init.sql:/docker-entrypoint-initdb.d/init.sql
    healthcheck:
      test: ["CMD-SHELL", "pg_isready -U user -d llm_eval_platform"]
      interval: 30s
      timeout: 10s
      retries: 3

  # Redis for caching and background jobs
  redis:
    image: redis:7-alpine
    container_name: llm_eval_redis
    ports:
      - "6379:6379"
    volumes:
      - redis_data:/data
    healthcheck:
      test: ["CMD", "redis-cli", "ping"]
      interval: 30s
      timeout: 10s
      retries: 3

  # Backend API (when ready)
  # api:
  #   build: 
  #     context: ./backend
  #     dockerfile: Dockerfile
  #   container_name: llm_eval_api
  #   ports:
  #     - "8000:8000"
  #   environment:
  #     - DATABASE_URL=postgresql+asyncpg://user:password@postgres:5432/llm_eval_platform
  #     - REDIS_URL=redis://redis:6379/0
  #   depends_on:
  #     postgres:
  #       condition: service_healthy
  #     redis:
  #       condition: service_healthy
  #   volumes:
  #     - ./backend:/app
  #   command: uvicorn main:app --host 0.0.0.0 --port 8000 --reload

  # Frontend (when ready)
  # frontend:
  #   build:
  #     context: ./frontend
  #     dockerfile: Dockerfile
  #   container_name: llm_eval_frontend
  #   ports:
  #     - "3000:3000"
  #   environment:
  #     - REACT_APP_API_URL=http://localhost:8000
  #   depends_on:
  #     - api
  #   volumes:
  #     - ./frontend:/app
  #     - /app/node_modules

volumes:
  postgres_data:
  redis_data: 